[{"C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\index.js":"1","C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\App.js":"2","C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\_reducer\\index.js":"3","C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\components\\EditorComponent.js":"4","C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\components\\forum\\ForumComponent.js":"5","C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\hoc\\auth.js":"6","C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\_reducer\\user_reducer.js":"7","C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"8","C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"9","C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"10","C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\components\\forum\\TableRow.js":"11","C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\components\\forum\\TableColumn.js":"12","C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\components\\forum\\ForumTable.js":"13","C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\_actions\\user_action.js":"14","C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\_actions\\types.js":"15"},{"size":703,"mtime":1614334085934,"results":"16","hashOfConfig":"17"},{"size":995,"mtime":1615622946303,"results":"18","hashOfConfig":"17"},{"size":162,"mtime":1613785419975,"results":"19","hashOfConfig":"17"},{"size":2039,"mtime":1615623296559,"results":"20","hashOfConfig":"17"},{"size":3335,"mtime":1613785419982,"results":"21","hashOfConfig":"17"},{"size":1141,"mtime":1613785420009,"results":"22","hashOfConfig":"17"},{"size":470,"mtime":1613785419976,"results":"23","hashOfConfig":"17"},{"size":1022,"mtime":1613785419997,"results":"24","hashOfConfig":"17"},{"size":2561,"mtime":1613785420006,"results":"25","hashOfConfig":"17"},{"size":1672,"mtime":1613877793043,"results":"26","hashOfConfig":"17"},{"size":203,"mtime":1613785419991,"results":"27","hashOfConfig":"17"},{"size":252,"mtime":1613785419990,"results":"28","hashOfConfig":"17"},{"size":548,"mtime":1613785419986,"results":"29","hashOfConfig":"17"},{"size":814,"mtime":1613785419973,"results":"30","hashOfConfig":"17"},{"size":124,"mtime":1614143213301,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1fml1i1",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\index.js",[],["68","69"],"C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\App.js",[],"C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\_reducer\\index.js",[],"C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\components\\EditorComponent.js",["70"],"C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\components\\forum\\ForumComponent.js",["71"],"import React, { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport ForumTable from \"./ForumTable\";\r\nimport TableColumn from \"./TableColumn\";\r\nimport TableRow from \"./TableRow\";\r\n\r\nconst ForumComponent = (props) => {\r\n  useEffect(() => {\r\n    // db에서 받아오는게 목표긴 해 ㅇㅇ;;\r\n    console.log(\"component did mount with useEffect!\");\r\n    console.log(`${getContent.title} , ${removeTag(getContent.content)}`);\r\n  }, []);\r\n\r\n  const getContent = props.location.state.detail; // edit에서 넘어온 데이터 받기\r\n\r\n  console.log(getContent); // { title: , content: }\r\n  console.log(typeof getContent.content);\r\n\r\n  const removeTag = (strTag) => {\r\n    return strTag\r\n      .replace(/<br\\/>/gi, \"\\n\")\r\n      .replace(/<(\\/)?([a-zA-Z]*)(\\s[a-zA-Z]*=[^>]*)?(\\s)*(\\/)?>/gi, \"\"); // 태그 제거\r\n  };\r\n\r\n  function addTable() {\r\n    return (\r\n      <TableRow>\r\n        <TableColumn>6</TableColumn>\r\n        <TableColumn>{getContent.title}</TableColumn>\r\n        <TableColumn>{removeTag(getContent.content)}</TableColumn>\r\n        <TableColumn>5</TableColumn>\r\n      </TableRow>\r\n    );\r\n  }\r\n\r\n  /*  <TableRow>\r\n  <TableColumn>1</TableColumn>  \r\n  <TableColumn>첫번째 게시글입니다.</TableColumn>\r\n  <TableColumn>2021-01-31</TableColumn>\r\n  <TableColumn>6</TableColumn>\r\n</TableRow>   \r\n\r\n1 .이거 생산하는 컴포넌트 작성하기\r\n2. 에디터에서 작성하면 게시판에 구현될 수 있게 연결  --> 데이터 받아왔음, 태그도 제거하고., 이제 흠. db랑 연결을 해봐야할 거같은데\r\n*/\r\nconst move = () => {\r\n  props.history.push('/edit')\r\n}\r\n  return (\r\n    <>\r\n      <ForumTable headersName={[\"글번호\", \"제목\", \"등록일\", \"조회수\"]}>\r\n        <TableRow>\r\n          <TableColumn>1</TableColumn>\r\n          <TableColumn>첫번째 게시글입니다.</TableColumn>\r\n          <TableColumn>2021-01-31</TableColumn>\r\n          <TableColumn>6</TableColumn>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableColumn>2</TableColumn>\r\n          <TableColumn>두번째 게시글입니다.</TableColumn>\r\n          <TableColumn>2021-01-31</TableColumn>\r\n          <TableColumn>5</TableColumn>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableColumn>3</TableColumn>\r\n          <TableColumn>세번째 게시글입니다.</TableColumn>\r\n          <TableColumn>2021-01-31</TableColumn>\r\n          <TableColumn>1</TableColumn>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableColumn>4</TableColumn>\r\n          <TableColumn>네번째 게시글입니다.</TableColumn>\r\n          <TableColumn>2021-01-31</TableColumn>\r\n          <TableColumn>2</TableColumn>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableColumn>5</TableColumn>\r\n          <TableColumn>다섯번째 게시글입니다.</TableColumn>\r\n          <TableColumn>2021-01-31</TableColumn>\r\n          <TableColumn>4</TableColumn>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableColumn>5</TableColumn>\r\n          <TableColumn>{getContent.title}</TableColumn>\r\n          <TableColumn>{removeTag(getContent.content)}</TableColumn>\r\n          <TableColumn>4</TableColumn>\r\n        </TableRow>\r\n        {addTable()}\r\n      </ForumTable>\r\n      <button onClick={move}>작성 창</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(ForumComponent);\r\n","C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\hoc\\auth.js",["72","73"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { auth } from \"../_actions/user_action\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n  //specificComponent = 안에 넣을 컴포넌트\r\n\r\n  // option  null = 아무나\r\n  //         true = 로그인한 유저,  false = 로그인 안한 유저\r\n\r\n  function AuthenticationCheck(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n      dispatch(auth()).then((response) => {\r\n        console.log(response);\r\n\r\n        // 로그인 하지 않은 상태\r\n        if (!response.payload.isAuth) {\r\n          if (option) {\r\n            props.history.push(\"/login\");\r\n          }\r\n        } else {\r\n          // 로그인 된 상태\r\n          // admin이 아닌데 admin전용으로 가려할 때\r\n          if (adminRoute && !response.payload.admin) {\r\n            props.history.push(\"/\");\r\n          } else if (option === false) {\r\n            props.history.push(\"/\");\r\n          }\r\n        }\r\n      });\r\n    }, []);\r\n\r\n    return <SpecificComponent />;\r\n  }\r\n\r\n  return AuthenticationCheck;\r\n}\r\n\r\n","C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\_reducer\\user_reducer.js",["74","75","76","77"],"import { LOGIN_USER, REGISTER_USER, AUTH_USER } from \"../_actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case LOGIN_USER:\r\n      return { ...state, loginSuccess: action.payload };\r\n      break;\r\n    case REGISTER_USER:\r\n      return { ...state, register: action.payload };\r\n      break;\r\n    case AUTH_USER:\r\n      return { ...state, userData: action.payload };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\components\\views\\LandingPage\\LandingPage.js",["78"],"import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Link, reactRouter, withRouter} from 'react-router-dom'\r\n\r\nfunction LandingPage(props) {\r\n  useEffect(() => {\r\n    axios.get(\"/api/hello\").then((response) => {\r\n      console.log(response.data)})\r\n  }, []);\r\n\r\n  const onClickHandler = () => {\r\n    axios.get('/api/users/logout')\r\n    .then(response => {\r\n      if(response.data.success){\r\n        props.history.push(\"/login\")\r\n      } else {\r\n        alert('로그아웃 실패')\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n        flexDirection:'column'\r\n      }}>      \r\n      <h2>시작 페이지</h2>\r\n\r\n      <button onClick={onClickHandler}>\r\n        로그아웃        \r\n      </button>\r\n      <br/>\r\n      <Link to=\"/register\">회원가입</Link>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LandingPage);\r\n","C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["79"],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { registerUser } from \"../../../_actions/user_action\";\r\nimport { reactRouter, withRouter } from \"react-router-dom\";\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n  const [Name, setName] = useState(\"\");\r\n  const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [isMatched, setisMatched] = useState(true);\r\n\r\n  const onEmailHandler = (event) => {\r\n    setEmail(event.currentTarget.value);\r\n  };\r\n  const onNameHandler = (event) => {\r\n    setName(event.currentTarget.value);\r\n  };\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  };\r\n  const onConfimrPasswordHandler = (event) => {\r\n    setConfirmPassword(event.currentTarget.value);\r\n  };\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault(); // submit 할 때 page refresh 막기\r\n\r\n    if (Password !== ConfirmPassword) {\r\n      setisMatched(false);\r\n      return ;\r\n    } else {\r\n      setisMatched(true);\r\n    }\r\n\r\n    let body = {\r\n      email: Email,\r\n      password: Password,\r\n      name: Name,\r\n    }; // 이 형태를 백엔드에 보내는 거임\r\n\r\n    dispatch(registerUser(body)) // to action\r\n      .then((response) => {\r\n        if (response.payload.success) {\r\n          props.history.push(\"/login\");\r\n        } else {\r\n          console.log(response);\r\n          alert(\"에러1\")\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      <form\r\n        style={{ display: \"flex\", flexDirection: \"column\" }}\r\n        onSubmit={onSubmitHandler}\r\n      >\r\n        <label>Email</label>\r\n        <input type=\"email\" value={Email} onChange={onEmailHandler} />\r\n        <label>Name</label>\r\n        <input type=\"text\" value={Name} onChange={onNameHandler} />\r\n        <label>Password</label>\r\n        <input type=\"password\" value={Password} onChange={onPasswordHandler} />\r\n        <label>Confirm Password</label>\r\n        <input\r\n          type=\"password\"\r\n          value={ConfirmPassword}\r\n          onChange={onConfimrPasswordHandler}\r\n        />\r\n        <br />\r\n        {isMatched ? <h4>일치</h4> : <h4>불일치</h4>}\r\n        <button>회원 가입</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(RegisterPage);\r\n","C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\components\\views\\LoginPage\\LoginPage.js",[],"C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\components\\forum\\TableRow.js",[],"C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\components\\forum\\TableColumn.js",[],"C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\components\\forum\\ForumTable.js",[],"C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\_actions\\user_action.js",[],"C:\\Users\\xoopp\\OneDrive\\문서\\react_clone-and-tutorials\\react_board\\client\\src\\_actions\\types.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":12,"column":6,"nodeType":"90","endLine":12,"endColumn":8,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":5,"column":1,"nodeType":"94","endLine":39,"endColumn":2},{"ruleId":"88","severity":1,"message":"95","line":33,"column":8,"nodeType":"90","endLine":33,"endColumn":10,"suggestions":"96"},{"ruleId":"92","severity":1,"message":"93","line":3,"column":1,"nodeType":"94","endLine":17,"endColumn":2},{"ruleId":"97","severity":1,"message":"98","line":7,"column":7,"nodeType":"99","messageId":"100","endLine":7,"endColumn":13},{"ruleId":"97","severity":1,"message":"98","line":10,"column":7,"nodeType":"99","messageId":"100","endLine":10,"endColumn":13},{"ruleId":"97","severity":1,"message":"98","line":13,"column":7,"nodeType":"99","messageId":"100","endLine":13,"endColumn":13},{"ruleId":"84","severity":1,"message":"85","line":3,"column":15,"nodeType":"86","messageId":"87","endLine":3,"endColumn":26},{"ruleId":"84","severity":1,"message":"85","line":4,"column":10,"nodeType":"86","messageId":"87","endLine":4,"endColumn":21},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'reactRouter' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getContent.content' and 'getContent.title'. Either include them or remove the dependency array.","ArrayExpression",["103"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.",["104"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [getContent.content, getContent.title]",{"range":"109","text":"110"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"111","text":"112"},[433,435],"[getContent.content, getContent.title]",[953,955],"[dispatch, props.history]"]